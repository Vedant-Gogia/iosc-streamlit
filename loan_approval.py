# -*- coding: utf-8 -*-
"""loan approval.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HOmCUYPen9QpxgpeCDMDiHb3sOmsy7s6
"""

import pandas as pd

df = pd.read_csv("/content/loan_approval_dataset.csv")

df.head()

df.info()

df.isnull()

df.info()



df[' education'].value_counts()

df[' loan_status'].value_counts()

df.columns

encoded_df = pd.get_dummies(df, prefix=None, prefix_sep='_', dummy_na=False, columns=[' education', ' self_employed'], sparse=False, drop_first=False, dtype=None)

"""encoded_df.head()"""

encoded_df.head()

encoded_df=encoded_df.drop(['loan_id'],axis=1)





"""# New Section"""

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

encoded_df[' loan_status'] =le.fit_transform(encoded_df[' loan_status'])

encoded_df.info()

encoded_df.head()

import seaborn as sns
sns.countplot(x = ' education',data = df)

x = encoded_df.drop(columns = [' loan_status']) # attributes
y = encoded_df[' loan_status'] # target variable

import numpy as np
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

from sklearn.linear_model import LogisticRegression
lr = LogisticRegression()

lr.fit(X_train,y_train)

y_pred = lr.predict(X_test)

from sklearn.metrics import accuracy_score
score = accuracy_score(y_test , y_pred)

print(score)